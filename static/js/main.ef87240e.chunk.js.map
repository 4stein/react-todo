{"version":3,"sources":["logo.svg","components/ToDoList/ToDoListFooter.js","components/ToDoList/ToDoListTaskCreator.js","components/ToDoList/services.js","components/ToDoList/Task.js","components/ToDoList/TasksList.js","components/ToDoList/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoListFooter","e","this","props","changeFilterCallback","target","dataset","value","tasks","filter","clearCompletedCallback","className","t","isDone","length","onClick","handlerFilterChanged","bind","data-value","React","Component","ToDoListTaskCreator","key","title","widgetId","data","URLSearchParams","append","fetch","method","body","headers","mode","then","result","json","createTask","newTask","task","done","onCreate","type","onKeyDown","createNewTask","Task","checked","toggleCallback","deleteCallback","TasksList","map","ToDoList","state","serverTasks","serverItem","id","setState","forceUpdate","set","filteredTasks","deleteTask","toggleTaskStatus","changeTaskFilter","clearCompleted","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","a","document","getElementById"],"mappings":"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","file":"static/js/main.ef87240e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nclass ToDoListFooter extends React.Component {\r\n\r\n    handlerFilterChanged(e) {\r\n        this.props.changeFilterCallback(e.target.dataset.value)\r\n    }\r\n\r\n    render() {\r\n        let { tasks, filter, clearCompletedCallback } = this.props;\r\n        return (\r\n            <div className='todolistfooter'>\r\n                <div>\r\n                    <span>{tasks.filter(t => !t.isDone).length} items left</span>\r\n                </div>\r\n                <div className='buttons'>\r\n                    <button\r\n                        className={filter === 'all' ? 'selected' : ''}\r\n                        onClick={this.handlerFilterChanged.bind(this)}\r\n                        data-value=\"all\">All\r\n                    </button>\r\n                    <button\r\n                        className={filter === 'active' ? 'selected' : ''}\r\n                        onClick={this.handlerFilterChanged.bind(this)}\r\n                        data-value=\"active\">Active\r\n                    </button>\r\n                    <button\r\n                        className={filter === 'completed' ? 'selected' : ''}\r\n                        onClick={this.handlerFilterChanged.bind(this)}\r\n                        data-value=\"completed\">Completed\r\n                    </button>\r\n                </div>\r\n                <span onClick={clearCompletedCallback.bind(this)}>Clear completed</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoListFooter;\r\n","import React from 'react';\r\nimport { createTask } from \"./services\";\r\n\r\nclass ToDoListTaskCreator extends React.Component {\r\n\r\n    createNewTask(e) {\r\n        if (e.key === 'Enter') {\r\n\r\n            createTask(e.target.value,53236)\r\n              .then(data => {\r\n                 const newTask = {\r\n                    title: data.task.title,\r\n                    isDone: data.task.done\r\n                };\r\n                this.props.onCreate(newTask);\r\n                e.target.value = '';\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todolist__header\">\r\n            <h4>Write something and enter</h4>\r\n                <input\r\n                    type=\"text\"\r\n                    onKeyDown={this.createNewTask.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoListTaskCreator;\r\n","export function createTask (title, widgetId) {\r\n\r\n    const data = new URLSearchParams();\r\n    data.append('widgetId', widgetId);\r\n    data.append('title', title);\r\n\r\n    return fetch('https://repetitora.net/api/JS/Tasks',\r\n        {\r\n            method: 'POST',\r\n            body: data,\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded; charset-UTF-8',\r\n                'accept': 'application/json'\r\n            },\r\n            mode: 'cors'\r\n        })\r\n        .then(result => result.json());\r\n}\r\n\r\n// export function updateTask (widgetId, taskId, title = null, isDone = null ) {\r\n//\r\n//     const data = new URLSearchParams();\r\n//     data.append('widgetId', widgetId);\r\n//     if (isDone !== null) data.append('done', isDone);\r\n//     if (title !== null) data.append('title', title);\r\n//\r\n//     return fetch('https://repetitora.net/api/JS/Tasks',\r\n//         {\r\n//             method: 'PUT',\r\n//             body: data,\r\n//             headers: {\r\n//                 'content-type': 'application/x-www-form-urlencoded; charset-UTF-8',\r\n//                 'accept': 'application/json'\r\n//             },\r\n//             mode: 'cors'\r\n//         })\r\n//         .then(result => result.json());\r\n// }\r\n\r\nexport function getTask (widgetId) {\r\n\r\n    return fetch(`https://repetitora.net/api/JS/Tasks?widgetId=${widgetId}&count=5`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded; charset-UTF-8',\r\n                'accept': 'application/json'\r\n            },\r\n            mode: 'cors'\r\n        })\r\n        .then(result => result.json());\r\n}\r\n\r\n","import React from 'react';\r\n\r\nclass Task extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //\r\n    //     this.state = {\r\n    //         editMode: false,\r\n    //         title: props.task.title\r\n    //     }\r\n    // }\r\n    //\r\n    // toggleTaskStatus(e) {\r\n    //     let task = {\r\n    //         ...this.props.task\r\n    //     }\r\n    //     task.isDone = !task.isDone;\r\n    //     updateTask(53236, task.id,null, task.isDone)\r\n    //         .then(data => {\r\n    //             this.state({\r\n    //                 editMode: false\r\n    //             });\r\n    //             this.props.toggleCallback(task);\r\n    //         });\r\n    // }\r\n    //\r\n    // saveTitle(e) {\r\n    //\r\n    //     const newTitle = e.target.value;\r\n    //\r\n    //     let task = {\r\n    //         ...this.props.task\r\n    //     }\r\n    //     task.title = newTitle;\r\n    //     updateTask(53236, task.id, newTitle, null)\r\n    //         .then(data => {\r\n    //             this.props.toggleCallback(task);\r\n    //         });\r\n    // }\r\n    //\r\n    // saveTitle() {\r\n    //     this.setState({\r\n    //         editMode: true\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={this.props.task.isDone ?\r\n                'todolist__tasks__task done' :\r\n                'todolist__tasks__task'}>\r\n                <input type=\"checkbox\"\r\n                       checked={this.props.task.isDone}\r\n                       onClick={this.props.toggleCallback.bind(this, this.props.task)}\r\n                />\r\n                {this.props.task.title}\r\n                <span\r\n                    className=\"delete\"\r\n                    onClick={this.props.deleteCallback.bind(this, this.props.task)}\r\n                >✖\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from \"./Task\";\r\n\r\nclass TasksList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todolist__tasks\">\r\n                {this.props.tasks.map(task => {\r\n                    return (\r\n                        <Task\r\n                            task={task}\r\n                            key={task.title}\r\n                            deleteCallback={this.props.deleteCallback.bind(this, task)}\r\n                            toggleCallback={this.props.toggleCallback.bind(this, task)}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksList;\r\n","import React from 'react';\r\n// import {} from 'react-redux';\r\nimport {combineReducers, createStore} from 'redux';\r\nimport ToDoListFooter from \"./ToDoListFooter\";\r\nimport ToDoListTaskCreator from \"./ToDoListTaskCreator\";\r\nimport TasksList from \"./TasksList\";\r\nimport {getTask} from \"./services\";\r\n\r\nclass ToDoList extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            tasks: [],\r\n            filter: 'all'\r\n        }\r\n\r\n        getTask(53236)\r\n            .then(data => {\r\n                let serverTasks = data.map(serverItem => {\r\n                    return {\r\n                        id: serverItem.id,\r\n                        title: serverItem.title,\r\n                        isDone: serverItem.done\r\n                    };\r\n                });\r\n\r\n                this.setState({\r\n                    tasks: serverTasks\r\n                })\r\n            });\r\n\r\n    }\r\n\r\n    createNewTask(task) {\r\n        this.setState({\r\n            tasks: [...this.state.tasks, task]\r\n        })\r\n    }\r\n\r\n    deleteTask(task) {\r\n        this.setState({\r\n            tasks: this.state.tasks.filter(t => t !== task)\r\n        })\r\n    }\r\n\r\n    toggleTaskStatus(task) {\r\n        task.isDone = !task.isDone;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    changeTaskFilter(set) {\r\n        this.setState({filter: set})\r\n    }\r\n\r\n    clearCompleted() {\r\n        this.setState({\r\n            tasks: this.state.tasks.filter(t => !t.isDone)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let {tasks, filter} = this.state;\r\n        let filteredTasks = [];\r\n\r\n        if (filter === 'all') filteredTasks = tasks;\r\n        if (filter === 'active') filteredTasks = tasks.filter(t => !t.isDone);\r\n        if (filter === 'completed') filteredTasks = tasks.filter(t => t.isDone);\r\n\r\n\r\n        return (\r\n            <div className=\"todolist\">\r\n                <ToDoListTaskCreator\r\n                    onCreate={this.createNewTask.bind(this)}\r\n                />\r\n                <TasksList\r\n                    tasks={filteredTasks}\r\n                    deleteCallback={this.deleteTask.bind(this)}\r\n                    toggleCallback={this.toggleTaskStatus.bind(this)}\r\n                />\r\n                <ToDoListFooter\r\n                    tasks={this.state.tasks}\r\n                    filter={this.state.filter}\r\n                    changeFilterCallback={this.changeTaskFilter.bind(this)}\r\n                    clearCompletedCallback={this.clearCompleted.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoList;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport ToDoList from \"./components/ToDoList/ToDoList\";\n\nfunction App(props) {\n    // debugger;\n\n    // let images1 = [\n    //     'https://wroom.ru/i/news/10675img1.jpg',\n    //     'https://cdn.motor1.com/images/mgl/ybzqq/s3/2019-audi-tt-rs-coupe.jpg',\n    //     'https://upload.wikimedia.org/wikipedia/commons/thumb/e/ef/Rolls-Royce_Wraith_Genf_2019_1Y7A5618.jpg/1200px-Rolls-Royce_Wraith_Genf_2019_1Y7A5618.jpg',\n    //     'https://www.mercedes-benz.ua/passengercars/mercedes-benz-cars/models/e-class/coupe-c238/design/lines-comparison/_jcr_content/comparisonslider/par/comparisonslide_3600/exteriorImage.MQ6.12.20190816144830.jpeg'\n    // ];\n    //\n    // let images2 = [\n    //     'https://cdn.motor1.com/images/mgl/MoVM6/s3/lamborghini-sc18-alston.jpg',\n    //     'https://aczpix.b-cdn.net/wp-content/uploads/2020/01/foto-mansory-carbonado-price_01.jpg',\n    //     'https://img.drive.ru/i/0/5db92ffcec05c45626000003.jpg',\n    //     'https://i.infocar.ua/i/6/135093/945x471.jpg',\n    //     'https://newsnn.ru/attachments/bc7c96dad36c3938ef748b33e831b65f4cbbea37/store/fill/1200/630/584b8107ae976aa2ec0ad34f459dbf92c74796910657be4326a0bdc7c171/%D0%BB%D0%B0%D0%BC%D0%B1%D0%BE%D1%80%D0%B4%D0%B6%D0%B8%D0%BD%D0%B8.jpg'\n    // ];\n\n  return (\n    <div className=\"App\">\n        {/*{props.a}*/}\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ToDoList/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nlet a = '123';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App a={a}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}